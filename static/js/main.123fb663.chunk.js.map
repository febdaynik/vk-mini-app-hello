{"version":3,"sources":["panels/Home.js","panels/Game.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Attempt","attempts","setAtmp","console","log","level","weight","GenWord","_keyboard_","word","split","map","key","className","Keyboard","keys","clk","Math","floor","random","generateWord","words","length","GenKeyboard","useState","updateAtmp","prev","Game","App","activePanel","setActivePanel","setUser","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.123fb663.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, CellButton, Title } from '@vkontakte/vkui';\r\n\r\nimport './game.css';\r\n\r\nconst Attempt = ({attempts, setAtmp}) => {\r\n\tconst updateAtmp = () =>{\r\n\t\tsetAtmp(prev => prev - 1)\r\n\t}\r\n\r\n\tconsole.log(\"x\")\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Title level=\"2\" weight=\"regular\" id=\"count\">Попыток: {attempts}</Title>\r\n\t\t</div> \r\n\t);\r\n}\r\n\r\nfunction GenWord({word}){\r\n\tconst _keyboard_ = word.split(\"\").map((key) => \r\n\t\t<div id=\"gfklj244\" key={key} className=\"letter borrad m-5 bg-block\">&nbsp;</div>\r\n\t);\r\n\r\n\treturn <div className=\"row-key\">{_keyboard_}</div>\r\n}\r\n\r\nconst Keyboard = ({keys, clk}) => {\r\n\tlet rnd = Math.floor(Math.random()*1234353)\r\n\tconst _keyboard_ = keys.split(\"\").map((key) =>\r\n\t\t<div id=\"dhjgf432\" className=\"flex-1 m-5 borrad letter button bg-block\" key={key} aria-label=\"{key}\" onClick={clk}>{key}</div>\r\n\t);\r\n\r\n\treturn <div className=\"row-key\">{_keyboard_}</div>\r\n}\r\n\r\nconst generateWord = () => {\r\n\tlet words = [\"парень\", \"школа\", \"армия\", \"любовь\"]\r\n\tlet rnd = Math.floor(Math.random()*words.length)\r\n\treturn words[rnd]\r\n}\r\n\r\nconst GenKeyboard = () => {\r\n\tconst [attempts, setAtmp] = useState(6);\r\n\tconsole.log(\"gk\")\r\n\tconst updateAtmp = () =>{\r\n\t\tsetAtmp(prev => prev - 1)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Div>\r\n\t\t\t<Attempt attempts={attempts} setAtmp={setAtmp}/>\r\n\t\t\t<CellButton onClick={updateAtmp}>Проверка</CellButton>\r\n\t\t\t<div className=\"page flex-1\">\r\n\t\t\t\t<div id=\"keyboard\">\r\n\t\t\t\t\t<Keyboard keys={\"йцукенгшщзхъ\"} clk={updateAtmp}/>\r\n\t\t\t\t\t<Keyboard keys={\"фывапролджэ\"} clk={updateAtmp}/>\r\n\t\t\t\t\t<Keyboard keys={\"ячсмитьбю\"} clk={updateAtmp}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Div>\r\n\t)\r\n\r\n}\r\n\r\nconst Game = ({id, go}) => {\r\n\tconsole.log(\"f\")\r\n\treturn(\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader className=\"myClass\">Отгадай слово</PanelHeader>\r\n\t\t\t<Div id=\"word\" className=\"column-\">\r\n\t\t\t\t<GenWord word={generateWord()}/>\r\n\t\t\t</Div>\r\n\t\t\t<GenKeyboard />\r\n\r\n\t\t</Panel>\r\n\t);\r\n}\r\n\r\n\r\n// class Attempt extends React.Component {\r\n// \tstate = {\r\n// \t\tattempts: 6\r\n// \t}\r\n// \tupdateAtmp = () => {\r\n// \t\tthis.setState({attempts: --this.state.attempts})\r\n// \t}\r\n// \trender() {\r\n// \t\tconsole.log(\"x\")\r\n// \t\treturn(\r\n// \t\t\t<div>\r\n// \t\t\t\t<Title level=\"2\" weight=\"regular\" id=\"count\">Попыток: {this.state.attempts}</Title>\r\n// \t\t\t\t<CellButton onClick={this.updateAtmp}>Клик</CellButton>\r\n// \t\t\t</div> \r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\n// class Game extends React.Component {\r\n// \tconstructor(props) {\r\n// \t\tsuper(props);\r\n// \t\tthis.state = {\r\n// \t\t\tgame: true,\r\n// \t\t\tword: \"\",\r\n// \t\t};\r\n// \t}\r\n\r\n// \trender(id, go){\r\n// \t\tconsole.log(\"f\")\r\n// \t\treturn(\r\n// \t\t\t<Panel id={id}>\r\n// \t\t\t\t<PanelHeader className=\"myClass\">Отгадай слово</PanelHeader>\r\n// \t\t\t\t<Attempt />\r\n\r\n// \t\t\t</Panel>\r\n// \t\t);\r\n// \t}\r\n\r\n// }\r\n\r\n\t\t\t\t// <div id=\"game\">\r\n\t\t\t\t// \t<Div id=\"word\" className=\"column-\">\r\n\t\t\t\t// \t\t<GenWord word={this.generateWord()}/>\r\n\t\t\t\t// \t\t<span>{this.state.word}</span>\r\n\t\t\t\t// \t</Div>\r\n\t\t\t\t// </div>\r\n\t\t\t\t// <div className=\"page flex-1\">\r\n\t\t\t\t// \t<Div id=\"keyboard\">\r\n\t\t\t\t// \t\t<GenKeyboard keys={\"йцукенгшщзхъ\"} clk={this.eventKeyboard}/>\r\n\t\t\t\t// \t\t<GenKeyboard keys={\"фывапролджэ\"} clk={this.eventKeyboard}/>\r\n\t\t\t\t// \t\t<GenKeyboard keys={\"ячсмитьбю\"} clk={this.eventKeyboard}/>\r\n\t\t\t\t// \t</Div>\r\n\t\t\t\t// </div>\r\n\r\nGame.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Game from './panels/Game';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('maingame');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\t// -----\n\t\t// <AdaptivityProvider>\n\t\t// \t<AppRoot>\n\t\t// \t\t<View activePanel={activePanel} popout={popout}>\n\t\t// \t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t// \t\t\t<Persik id='persik' go={go} />\n\t\t// \t\t</View>\n\t\t// \t</AppRoot>\n\t\t// </AdaptivityProvider>\n\t// -----\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Game id='maingame' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}